package webService;

import java.util.ArrayList;
import java.util.HashSet;

import javax.ws.rs.Consumes;
import javax.ws.rs.FormParam;
import javax.ws.rs.GET;
import javax.ws.rs.POST;
import javax.ws.rs.Path;
import javax.ws.rs.PathParam;
import javax.ws.rs.Produces;
import javax.ws.rs.QueryParam;
import javax.ws.rs.core.MediaType;
import javax.ws.rs.core.MultivaluedMap;

import org.json.simple.JSONObject;

import model.ProjectManager;

import com.google.gson.Gson;
import com.google.gson.JsonIOException;

import dto.FeedObjects;

@Path("/WebService")
public class FeedService {

//    @GET
//    @Path("/GetFeeds")
//    @Produces("application/json")
//    public String feed(@QueryParam("userId") String User_Id) {
//	
//	System.out.println("GET User_Id = "+User_Id);
//	
//	String feeds = null;
//	try {
//	    System.out.println(this.getClass().getName() + " " + "FeedService hello");
//	    ArrayList<FeedObjects> feedData = null;
//	    ProjectManager projectManager = new ProjectManager();
//	    feedData = projectManager.GetFeeds();
//	    // StringBuffer sb = new StringBuffer();
//	    Gson gson = new Gson();
//	    System.out.println(gson.toJson(feedData));
//	    feeds = gson.toJson(feedData);
//
//	} catch (Exception e) {
//	    System.out.println("error");
//	}
//	return feeds;
//    }

    @POST  
    @Path("/jsontest/{device}")  
    @Consumes("application/json")
    @Produces("text/plain")
//    @Produces({MediaType.TEXT_PLAIN, "application/x-www-form-urlencoded"}) 
//    @Consumes({MediaType.TEXT_PLAIN, MediaType.APPLICATION_XML, MediaType.APPLICATION_JSON, MediaType.TEXT_HTML, "application/x-www-form-urlencoded"}) 
    public String getjson(@PathParam("device") String device) {  
	
        System.out.println("getjson  device:"+device);
        
        
        JSONObject object = new JSONObject();
        try {
          object.put("name", "Jack Hack");
          object.put("score", new Integer(200));
          object.put("current", new Double(152.32));
          object.put("nickname", "Hacker");
        } catch (JsonIOException e) {
          e.printStackTrace();
        }
        return object.toString();
        
    }  
    
    
    
    
    @POST  
    @Path("/xmltest")  
//    @Consumes("application/json")  
//    @Produces("application/json")  
    public String postOnlyXML(@FormParam("userId") String userId) {  
	
        System.out.println("postOnlyXML  userId :" + userId);  
       // here is the XML file....enjoy.  
        if (userId==null) {
            return "trt tr userId==null " ;  
	}
        return "trtr not null User_Id = "+userId;  
    }  
}
